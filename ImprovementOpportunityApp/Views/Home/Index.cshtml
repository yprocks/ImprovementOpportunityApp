@model ImprovementOpportunityApp.Models.DeptViewModel
@using ImprovementOpportunityApp.AppCommons;

@{
    ViewBag.Title = "Forums";
}

<h2>Discussion Board</h2>

@if (@ViewBag.role != "employee")
{
<div class="row" runat="server">
    <div class="col col-sm-8">
        <canvas id="lineChart"></canvas>
        <div class="text-center chart-ios m-t-10 font-bold">Total IOs last week starting on <span id="startDay"></span></div>
    </div>

</div>//show link
}


<form method="get" action="~/Forum/Search">
    <div class="row">
        <div class="col-sm-3 pull-right">
            <div id="imaginary_container">
                <div class="input-group stylish-input-group">
                    <input type="text" name="query" class="form-control" placeholder="Search Forum">
                    <span class="input-group-addon">
                        <button type="submit">
                            <span class="glyphicon glyphicon-search"></span>
                        </button>
                    </span>
                </div>
            </div>
        </div>
    </div>
</form>

<table class="table">
    <tr>
        <th>
            Title
        </th>
        <th>
            Department
        </th>
        <th>
            Topic
        </th>
        <th>
            DateAdded
        </th>
        <th>
            LastUpdated
        </th>
        <th>
            UpVotes
        </th>
        <th>
            DownVotes
        </th>
        <th>
            TotalMessages
        </th>
        <th>
            IsActive
        </th>
        <th>Action</th>
    </tr>

    @foreach (var item in Model.ForumList)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Department)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Topic)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateAdded)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastUpdated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpVotes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DownVotes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalMessages)
            </td>
            <td>
                @if (item.IsActive)
                {
                    @:Yes
                }
                else
                {
                    @:No
                }
            </td>
            <td>
                @*@Html.ActionLink("Edit", "Edit", new { id = item.ForumId }) |*@

                @if (item.IsActive)
                {
                    <a href="~/Forum/Messages/@item.ForumId">View/Add Comments</a>
                    @*@Html.ActionLink("View", "Forum", "Messages", new { id = item.ForumId })*@
                }
                @if (User.IsInRole(ApplicationRoles.DEPARTMENT_HEAD) && Convert.ToInt32(ViewBag.DepartmentId) == item.DepartmentId)
                {
                    @:|

                    if (item.IsActive)
                    {
                        <a href="~/Forum/Update/@item.ForumId">Deactivate</a>
                    }
                    else
                    {
                        <a href="~/Forum/Update/@item.ForumId">Activate</a>
                    }
                }
            </td>
        </tr>
    }

</table>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>

@section scripts {
    <script>

    var Weeks = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"];

    var date = new Date();
    var dayOfWeek = date.getDay();

    var options = {
        weekday: "long",
        year: "numeric",
        month: "long",
        day: "numeric"
    };

    date.setDate(date.getDate() - 6);

    $('#startDay').text(date.toLocaleDateString("en-us", options));

    var tillCurDaysArray = Weeks.slice(0, dayOfWeek);
    var fromCurDaysArray = Weeks.slice(dayOfWeek, Weeks.length);

    var WeekDays = fromCurDaysArray.concat(tillCurDaysArray);

    var weeklyIos = [];

    @{
        foreach (var io in Model.WeeklyIOs)
        {
            @:weeklyIos.push(@io);
        }
    }

    /**
     * This is line graph. See doc at http://www.chartjs.org/docs/latest/charts/line.html
     */
    var lineCanvas = document.getElementById('lineChart').getContext('2d');
    var chart = new Chart(lineCanvas, {
        // The type of chart we want to create
        type: 'line',

        // The data for our dataset
        data: {
            labels: WeekDays,
            datasets: [{
                label: "Weekly Imporvement Opportunities",
                backgroundColor: 'rgb(255, 99, 132)',
                borderColor: 'rgb(255, 99, 132)',
                data: weeklyIos
            }]
        },

        // Configuration options go here
        options: {
            scales: {
                yAxes: [{
                    stacked: true
                }]
            }
        }
    });

    var departments = [];
    var departmentIos = [];

    @{
        foreach (var entry in Model.IoDepartmentWise)
        {
            @:departments.push('@entry.Key');
            @:departmentIos.push(@entry.Value);
        }
      }

    ///**
    //* This is pie graph of type donought. See doc at http://www.chartjs.org/docs/latest/charts/line.html
    //*/
    //var doughnutChart = document.getElementById('doughnutChart').getContext('2d');
    //var myDoughnutChart = new Chart(doughnutChart, {
    //    type: 'doughnut',
    //    data: {
    //        datasets: [{
    //            data: departmentIos,
    //            backgroundColor: ['#ff6384', '#36a2eb', '#cc65fe']
    //        }],
    //        labels: departments
    //    },
    //    options: {}
    //});
    </script>
}